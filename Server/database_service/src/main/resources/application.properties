spring.datasource.url= jdbc:postgresql://${PERSISTENCE_HOST}:${PERSISTENCE_PORT}/${PERSISTENCE_DB}
spring.datasource.username=${PERSISTENCE_USER}
spring.datasource.password=${PERSISTENCE_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.hibernate.ddl-auto=create-drop


spring.kafka.consumer.group-id=esp54-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


server.port=8082


management.metrics.export.statsd.enabled=true
management.metrics.export.statsd.flavor=telegraf
management.metrics.export.statsd.port=${MONITORING_PORT}
management.metrics.export.statsd.host=${MONITORING_HOST}
management.metrics.tags.host=esp54-databaseService

management.metrics.enable.kafka=false
management.metrics.enable.logback=false
management.metrics.enable.jvm=false
management.metrics.enable.process=false
management.metrics.enable.system=false
management.metrics.enable.spring=false
management.metrics.enable.statsd=false
management.metrics.enable.tomcat=false
management.metrics.enable.hikaricp=false
management.metrics.enable.jdbc=false


jsa.kafka.topic=esp54_databaseServiceTopic