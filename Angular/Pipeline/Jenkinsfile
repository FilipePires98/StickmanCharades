pipeline {
    parameters {
        booleanParam(
            name: 'build_and_publish',
            defaultValue: false,
            description: 'Build and publish docker image'
        )
    }
    agent {
        docker {
            image '192.168.160.99:5000/esp54-web_pipeline_agent'
            registryUrl 'https://192.168.160.99:5000'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
        VERSION = """${sh(
            returnStdout:true,
            script: 'jq -r .version Angular/stickman-charades/package.json'
        )}"""
    }
    stages {
        stage('Test') {
            when {
                not {
                    branch 'master'
                }
            }
            steps {
                dir ('Angular/stickman-charades') {
                    sh 'echo Skipping...'
                }
            }
        }
        stage('Build & Publish') {
            when {
                or {
                    not {
                        branch 'master'
                    }
                    expresion { params.build_and_publish }
                }
            }
            steps {
                dir('Angular/stickman-charades') {
                    sh '''
                        docker build -t esp54-web:${VERSION} --file Dockerfile-prod .
                        docker tag esp54-web:${VERSION} 192.168.160.99:5000/esp54-web:${VERSION}
                        docker push 192.168.160.99:5000/esp54-web:$VERSION
                    '''
                }
            }
        }
        stage('Deploy') {
            when {
                branch 'master'
            }
            steps {
                sshagent(credentials: ['esp54-ssh-runtime-vm']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no -l esp54 192.168.160.103 "
                            docker pull 192.168.160.99:5000/esp54-web:${VERSION}
                            docker stop esp54-web && docker rm esp54-web || echo No container up. Continue
                            docker run -p 54080:80 -d --name=esp54-web 192.168.160.99:5000/esp54-web:${VERSION}
                        "
                    '''
                }
            }
        }
    }
}
