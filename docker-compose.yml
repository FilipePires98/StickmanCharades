version: "3.3"

services:
  app:
    build:
      context: ./Server/stickman_charades
      dockerfile: Dockerfile
    environment:
      PERSISTENCE_HOST: db
      PERSISTENCE_PORT: 5432
      PERSISTENCE_DB: esp54
      PERSISTENCE_USER: esp54
      PERSISTENCE_PASSWORD: esp54
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8080:8080
    depends_on:
      - db
      - kafka
      #- kafka-zookeeper
      #- kafka-server

  db:
    image: postgres:12.2
    environment:
      POSTGRES_DB: esp54
      POSTGRES_USER: esp54
      POSTGRES_PASSWORD: esp54
#    volumes:
#      - db-data:/var/lib/postgresql/data

  kafka:
    image: spotify/kafka
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092

  #kafka-zookeeper:
  #  image: wurstmeister/zookeeper:3.4.6
  #kafka-server:
  #  image: wurstmeister/kafka:2.12-2.4.0
  #  environment:
  #    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
  #    KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #    KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
  #  depends_on:
  #    - kafka-zookeeper

  web:
    build:
      context: ./Angular/stickman-charades
      dockerfile: Dockerfile-prod
      #dockerfile: Dockerfile-dev
    ports:
      - 80:80
    depends_on:
      - app
    #volumes:
    #  - ./Angular/stickman-charades:/app # for develpment only

#volumes:
#  db-data:
